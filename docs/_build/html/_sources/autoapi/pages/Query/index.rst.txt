:py:mod:`pages.Query`
=====================

.. py:module:: pages.Query


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   pages.Query.layout_que
   pages.Query.query_gen
   pages.Query.evid_gen
   pages.Query.query_router
   pages.Query.modal_router
   pages.Query.infer



Attributes
~~~~~~~~~~

.. autoapisummary::

   pages.Query.modal_var_index
   pages.Query.modal_type
   pages.Query.modal_basic_que
   pages.Query.modal_option_que
   pages.Query.layout


.. py:data:: modal_var_index
   

   

.. py:data:: modal_type
   

   

.. py:data:: modal_basic_que
   

   

.. py:data:: modal_option_que
   

   

.. py:function:: layout_que()

       Generates the Basic Layout in Dash for Query withe the Tree varnames as Options
   :return: Dash html strucktur


.. py:data:: layout
   

   

.. py:function:: query_gen(dd_vals: List, q_var: List, q_in: List, q_op)

       Handel all action in the Query Part of the GUI (Extend Change Reduce)
   :param dd_vals: All Varietals used in Query Section are chosen
   :param q_var: the Dropdown of variable of Query Section
   :param q_in: the Input for the Variables of Query Section
   :param q_op:  the Variabel  who is selected for the Zoom
   :return: Updatet Varibel List and the Input.


.. py:function:: evid_gen(dd_vals, e_var, e_in, e_op)

       Handel all action in the Evidence Part of the GUI (Extend Change Reduce)
   :param dd_vals: All Varietals used in Evidence Section are chosen
   :param e_var: the Dropdown of variable of Evidence Section
   :param e_in: the Input for the Variables of Evidence Section
   :param q_op:  the Variabel  who is selected for the Zoom
   :return: Updatet Varibel List and the Input.


.. py:function:: query_router(q_dd, e_dd, b_q, b_e, op_s, q_var, q_in, e_var, e_in, q_op, e_op, op_i)

       Receives app callback events and manages/redirects these to the correct functions.
   :param q_dd: Query Varibels Names
   :param e_dd: Evidence Variable Names
   :param b_q: Trigger if the Zoom Button in the Query is Pressed
   :param b_e: Trigger if the Zoom Button in the Evidence is Pressed
   :param op_s: Trigger if the Modal parameter from a Zoom should be saved
   :param q_var: Div of the Query Variable
   :param q_in: Div or the Input of Query
   :param e_var: Div of the Evidence Variable
   :param e_in: Div or the Input of Evidence
   :param q_op: Information of whiche Zoom Button was pressed in the Query section
   :param e_op: Information of whiche Zoom Button was pressed in the Evidence section
   :param op_i: The Values choosen in the Zoom Modal
   :return: Query Varibels, Query Input, Evidence Variable, Evidence Input, Text Prefix.


.. py:function:: modal_router(op, op_i, m_bod, dd_e, dd_q)

       Recessive all App Calls that are change the Modal for the zoom Function
   :param op: Trigger to add More Input Option by Numeric Variabel
   :param op_i: Trigger to update Chance for the Chosen values
   :param m_bod: The State of the Modal
   :param dd_e: div withe the chosen values in the Evidence Section
   :param dd_q: div withe the chosen values in the Query Section
   :return: update Modal Body for the Zoom


.. py:function:: infer(n1, q_var, q_in, e_var, e_in)

       Calculates withe Jpt the Probilty of query and evidence
   :param n1: Button to trigger the Calculation
   :param q_var: Div of the Query Variable
   :param q_in: Div or the Input of Query
   :param e_var: Div of the Evidence Variable
   :param e_in: Div or the Input of Evidence
   :return: Probability as String


